{
  "version": 3,
  "sources": ["../../../../../../../esm/dist/cjs/dist/cjs/src/application/getAdressesFranceV2.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = function (mod) {\n    return mod && mod.__esModule ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getAddressesFromGouvAdresseApi_1 = __importDefault(require(\"../infrastructure/getAddressesFromGouvAdresseApi\"));\nfunction getAddressesFranceV2(query) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!process.env.OKAPI_API_KEY) {\n            throw new Error(\"OKAPI API Key is not defined\");\n        }\n        let addresses = [];\n        const response = yield (0, getAddressesFromGouvAdresseApi_1.default)(query);\n        const data = yield response.json();\n        if (response.status === 200) {\n            for (let address of data.features) {\n                addresses.push({\n                    postal_code: address.properties.postcode,\n                    city: address.properties.city,\n                    road: address.properties.name,\n                    number: address.properties.housenumber ? address.properties.housenumber : \"\",\n                    country: \"France\",\n                    latitude: address.geometry.coordinates[1],\n                    longitude: address.geometry.coordinates[0]\n                });\n            }\n        }\n        return addresses;\n    });\n}\nexports.default = getAddressesFranceV2;\n"],
  "mappings": ";AACA,IAAI,YAAY,SAAU,SAAS,YAAY,GAAG,WAAW;AACzD,WAAS,MAAM,OAAO;AAClB,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AACzD,cAAQ,KAAK;AAAA,IACjB,CAAC;AAAA,EACL;AACA,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AACtB,UAAI;AACA,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAC9B,SACO,GAAP;AACI,eAAO,CAAC;AAAA,MACZ;AAAA,IACJ;AACA,aAAS,SAAS,OAAO;AACrB,UAAI;AACA,aAAK,UAAU,SAAS,KAAK,CAAC;AAAA,MAClC,SACO,GAAP;AACI,eAAO,CAAC;AAAA,MACZ;AAAA,IACJ;AACA,aAAS,KAAK,QAAQ;AAClB,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,IACtF;AACA,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AACA,IAAI,kBAAkB,SAAU,KAAK;AACjC,SAAO,OAAO,IAAI,aAAa,MAAM,EAAE,WAAW,IAAI;AAC1D;AACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,MAAM,mCAAmC,gBAAgB,QAAQ,kDAAkD,CAAC;AACpH,SAAS,qBAAqB,OAAO;AACjC,SAAO,UAAU,MAAM,QAAQ,QAAQ,aAAa;AAChD,QAAI,CAAC,QAAQ,IAAI,eAAe;AAC5B,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAClD;AACA,QAAI,YAAY,CAAC;AACjB,UAAM,WAAW,OAAO,GAAG,iCAAiC,SAAS,KAAK;AAC1E,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,QAAI,SAAS,WAAW,KAAK;AACzB,eAAS,WAAW,KAAK,UAAU;AAC/B,kBAAU,KAAK;AAAA,UACX,aAAa,QAAQ,WAAW;AAAA,UAChC,MAAM,QAAQ,WAAW;AAAA,UACzB,MAAM,QAAQ,WAAW;AAAA,UACzB,QAAQ,QAAQ,WAAW,cAAc,QAAQ,WAAW,cAAc;AAAA,UAC1E,SAAS;AAAA,UACT,UAAU,QAAQ,SAAS,YAAY;AAAA,UACvC,WAAW,QAAQ,SAAS,YAAY;AAAA,QAC5C,CAAC;AAAA,MACL;AAAA,IACJ;AACA,WAAO;AAAA,EACX,CAAC;AACL;AACA,QAAQ,UAAU;",
  "names": []
}
