{
  "version": 3,
  "sources": ["../../../../../../../../../esm/dist/cjs/dist/cjs/src/application/tests/feature/getAddressesFranceV2.test.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function (resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = function (mod) {\n    return mod && mod.__esModule ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getAdressesFranceV2_1 = __importDefault(require(\"../../../application/getAdressesFranceV2\"));\ndescribe(\"getAddressesFrance\", () => {\n    it(\"getAddressesFrance when query is 19 rue du Creux\", () => __awaiter(void 0, void 0, void 0, function* () {\n        const result = yield (0, getAdressesFranceV2_1.default)(\"19 rue du Creux\");\n        expect(result.length).toBeGreaterThan(0);\n        expect(result[0]).toHaveProperty(\"postal_code\");\n        expect(result[0].postal_code).toBeDefined();\n        expect(result[0].postal_code.trim()).not.toEqual(\"\");\n        expect(result[0]).toHaveProperty(\"city\");\n        expect(result[0].city).toBeDefined();\n        expect(result[0].city).not.toEqual(\"\");\n        expect(result[0]).toHaveProperty(\"road\");\n        expect(result[0].road).toBeDefined();\n        expect(result[0].road.trim()).not.toEqual(\"\");\n        expect(result[0]).toHaveProperty(\"number\");\n        expect(result[0].number).toBeDefined();\n        expect(result[0].country).toBeDefined();\n        expect(result[0].country.trim()).not.toEqual(\"\");\n    }));\n});\n"],
  "mappings": ";AACA,IAAI,YAAY,SAAU,SAAS,YAAY,GAAG,WAAW;AACzD,WAAS,MAAM,OAAO;AAClB,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AACzD,cAAQ,KAAK;AAAA,IACjB,CAAC;AAAA,EACL;AACA,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AACtB,UAAI;AACA,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAC9B,SACO,GAAP;AACI,eAAO,CAAC;AAAA,MACZ;AAAA,IACJ;AACA,aAAS,SAAS,OAAO;AACrB,UAAI;AACA,aAAK,UAAU,SAAS,KAAK,CAAC;AAAA,MAClC,SACO,GAAP;AACI,eAAO,CAAC;AAAA,MACZ;AAAA,IACJ;AACA,aAAS,KAAK,QAAQ;AAClB,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,IACtF;AACA,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AACA,IAAI,kBAAkB,SAAU,KAAK;AACjC,SAAO,OAAO,IAAI,aAAa,MAAM,EAAE,WAAW,IAAI;AAC1D;AACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,MAAM,wBAAwB,gBAAgB,QAAQ,0CAA0C,CAAC;AACjG,SAAS,sBAAsB,MAAM;AACjC,KAAG,oDAAoD,MAAM,UAAU,QAAQ,QAAQ,QAAQ,aAAa;AACxG,UAAM,SAAS,OAAO,GAAG,sBAAsB,SAAS,iBAAiB;AACzE,WAAO,OAAO,MAAM,EAAE,gBAAgB,CAAC;AACvC,WAAO,OAAO,EAAE,EAAE,eAAe,aAAa;AAC9C,WAAO,OAAO,GAAG,WAAW,EAAE,YAAY;AAC1C,WAAO,OAAO,GAAG,YAAY,KAAK,CAAC,EAAE,IAAI,QAAQ,EAAE;AACnD,WAAO,OAAO,EAAE,EAAE,eAAe,MAAM;AACvC,WAAO,OAAO,GAAG,IAAI,EAAE,YAAY;AACnC,WAAO,OAAO,GAAG,IAAI,EAAE,IAAI,QAAQ,EAAE;AACrC,WAAO,OAAO,EAAE,EAAE,eAAe,MAAM;AACvC,WAAO,OAAO,GAAG,IAAI,EAAE,YAAY;AACnC,WAAO,OAAO,GAAG,KAAK,KAAK,CAAC,EAAE,IAAI,QAAQ,EAAE;AAC5C,WAAO,OAAO,EAAE,EAAE,eAAe,QAAQ;AACzC,WAAO,OAAO,GAAG,MAAM,EAAE,YAAY;AACrC,WAAO,OAAO,GAAG,OAAO,EAAE,YAAY;AACtC,WAAO,OAAO,GAAG,QAAQ,KAAK,CAAC,EAAE,IAAI,QAAQ,EAAE;AAAA,EACnD,CAAC,CAAC;AACN,CAAC;",
  "names": []
}
