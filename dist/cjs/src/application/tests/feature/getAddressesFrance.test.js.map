{
  "version": 3,
  "sources": ["../../../../../esm/src/application/tests/feature/getAddressesFrance.test.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getAddressesFrance_1 = __importDefault(require(\"../../../application/getAddressesFrance\"));\ndescribe(\"getAddressesFrance\", () => {\n    it(\"getAddressesFrance when query is 19 rue du Creux\", () => __awaiter(void 0, void 0, void 0, function* () {\n        const result = yield (0, getAddressesFrance_1.default)(\"19 rue du Creux\");\n        expect(result.length).toBeGreaterThan(0);\n        expect(result[0]).toHaveProperty(\"postal_code\");\n        expect(result[0].postal_code).toBeDefined();\n        expect(result[0].postal_code.trim()).not.toEqual(\"\");\n        expect(result[0]).toHaveProperty(\"city\");\n        expect(result[0].city).toBeDefined();\n        expect(result[0].city).not.toEqual(\"\");\n        expect(result[0]).toHaveProperty(\"road\");\n        expect(result[0].road).toBeDefined();\n        expect(result[0].road.trim()).not.toEqual(\"\");\n        expect(result[0]).toHaveProperty(\"number\");\n        expect(result[0].number).toBeDefined();\n        expect(result[0].country).toBeDefined();\n        expect(result[0].country.trim()).not.toEqual(\"\");\n    }));\n});\n"],
  "mappings": ";AACA,IAAI,YAAwC,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,WAAS,MAAM,OAAO;AAAE,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,cAAQ,KAAK;AAAA,IAAG,CAAC;AAAA,EAAG;AAC3G,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAP;AAAY,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,SAAS,KAAK,CAAC;AAAA,MAAG,SAAS,GAAP;AAAY,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC7G,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AACA,IAAI,kBAAoD,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAI;AAC5D;AACA,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,MAAM,uBAAuB,gBAAgB,QAAQ,yCAAyC,CAAC;AAC/F,SAAS,sBAAsB,MAAM;AACjC,KAAG,oDAAoD,MAAM,UAAU,QAAQ,QAAQ,QAAQ,aAAa;AACxG,UAAM,SAAS,OAAO,GAAG,qBAAqB,SAAS,iBAAiB;AACxE,WAAO,OAAO,MAAM,EAAE,gBAAgB,CAAC;AACvC,WAAO,OAAO,EAAE,EAAE,eAAe,aAAa;AAC9C,WAAO,OAAO,GAAG,WAAW,EAAE,YAAY;AAC1C,WAAO,OAAO,GAAG,YAAY,KAAK,CAAC,EAAE,IAAI,QAAQ,EAAE;AACnD,WAAO,OAAO,EAAE,EAAE,eAAe,MAAM;AACvC,WAAO,OAAO,GAAG,IAAI,EAAE,YAAY;AACnC,WAAO,OAAO,GAAG,IAAI,EAAE,IAAI,QAAQ,EAAE;AACrC,WAAO,OAAO,EAAE,EAAE,eAAe,MAAM;AACvC,WAAO,OAAO,GAAG,IAAI,EAAE,YAAY;AACnC,WAAO,OAAO,GAAG,KAAK,KAAK,CAAC,EAAE,IAAI,QAAQ,EAAE;AAC5C,WAAO,OAAO,EAAE,EAAE,eAAe,QAAQ;AACzC,WAAO,OAAO,GAAG,MAAM,EAAE,YAAY;AACrC,WAAO,OAAO,GAAG,OAAO,EAAE,YAAY;AACtC,WAAO,OAAO,GAAG,QAAQ,KAAK,CAAC,EAAE,IAAI,QAAQ,EAAE;AAAA,EACnD,CAAC,CAAC;AACN,CAAC;",
  "names": []
}
