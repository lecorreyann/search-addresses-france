{
  "version": 3,
  "sources": ["../../esm/application/getAddressesFrance.js"],
  "sourcesContent": ["import getAddressDetailsFromOkapiApi from \"../infrastructure/getAddressDetailsFromOkapiApi.js\";\nimport getAddressesFromOkapiApi from \"../infrastructure/getAddressesFromOkapiApi.js\";\nexport default async function getAddressesFrance(query) {\n    if (!process.env.OKAPI_API_KEY) {\n        throw new Error(\"OKAPI API Key is not defined\");\n    }\n    let addresses = [];\n    const response = await getAddressesFromOkapiApi(query, process.env.OKAPI_API_KEY);\n    if (response.status === 200) {\n        const data = (await response.json());\n        for await (let address of data) {\n            const addressDetails = await getAddressDetailsFromOkapiApi(address.code, process.env.OKAPI_API_KEY);\n            const data = (await addressDetails.json());\n            addresses.push({\n                postal_code: data.codePostal,\n                city: data.commune,\n                road: `${data.libelleVoie}${data.lieuDit ? ` ${data.lieuDit}` : \"\"}`,\n                number: data.numeroVoie,\n                country: \"France\",\n                latitude: 0,\n                longitude: 0,\n            });\n        }\n    }\n    return addresses;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA0C;AAC1C,sCAAqC;AACrC,eAAO,mBAA0C,OAAO;AACpD,MAAI,CAAC,QAAQ,IAAI,eAAe;AAC5B,UAAM,IAAI,MAAM,8BAA8B;AAAA,EAClD;AACA,MAAI,YAAY,CAAC;AACjB,QAAM,WAAW,UAAM,gCAAAA,SAAyB,OAAO,QAAQ,IAAI,aAAa;AAChF,MAAI,SAAS,WAAW,KAAK;AACzB,UAAM,OAAQ,MAAM,SAAS,KAAK;AAClC,mBAAe,WAAW,MAAM;AAC5B,YAAM,iBAAiB,UAAM,qCAAAC,SAA8B,QAAQ,MAAM,QAAQ,IAAI,aAAa;AAClG,YAAMC,QAAQ,MAAM,eAAe,KAAK;AACxC,gBAAU,KAAK;AAAA,QACX,aAAaA,MAAK;AAAA,QAClB,MAAMA,MAAK;AAAA,QACX,MAAM,GAAGA,MAAK,cAAcA,MAAK,UAAU,IAAIA,MAAK,YAAY;AAAA,QAChE,QAAQA,MAAK;AAAA,QACb,SAAS;AAAA,QACT,UAAU;AAAA,QACV,WAAW;AAAA,MACf,CAAC;AAAA,IACL;AAAA,EACJ;AACA,SAAO;AACX;",
  "names": ["getAddressesFromOkapiApi", "getAddressDetailsFromOkapiApi", "data"]
}
