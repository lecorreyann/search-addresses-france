{
  "version": 3,
  "sources": ["../../esm/application/getAddressesFranceV2.js"],
  "sourcesContent": ["import getAddressesFromGouvAdresseApi from \"../infrastructure/getAddressesFromGouvAdresseApi.js\";\nexport default async function getAddressesFranceV2(query) {\n    let addresses = [];\n    const response = await getAddressesFromGouvAdresseApi(query);\n    const data = (await response.json());\n    if (response.status === 200) {\n        for (let address of data.features) {\n            addresses.push({\n                postal_code: address.properties.postcode,\n                city: address.properties.city,\n                road: address.properties.name,\n                number: address.properties.housenumber\n                    ? address.properties.housenumber\n                    : \"\",\n                country: \"France\",\n                latitude: address.geometry.coordinates[1],\n                longitude: address.geometry.coordinates[0],\n            });\n        }\n    }\n    return addresses;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAA2C;AAC3C,eAAO,qBAA4C,OAAO;AACtD,MAAI,YAAY,CAAC;AACjB,QAAM,WAAW,UAAM,sCAAAA,SAA+B,KAAK;AAC3D,QAAM,OAAQ,MAAM,SAAS,KAAK;AAClC,MAAI,SAAS,WAAW,KAAK;AACzB,aAAS,WAAW,KAAK,UAAU;AAC/B,gBAAU,KAAK;AAAA,QACX,aAAa,QAAQ,WAAW;AAAA,QAChC,MAAM,QAAQ,WAAW;AAAA,QACzB,MAAM,QAAQ,WAAW;AAAA,QACzB,QAAQ,QAAQ,WAAW,cACrB,QAAQ,WAAW,cACnB;AAAA,QACN,SAAS;AAAA,QACT,UAAU,QAAQ,SAAS,YAAY;AAAA,QACvC,WAAW,QAAQ,SAAS,YAAY;AAAA,MAC5C,CAAC;AAAA,IACL;AAAA,EACJ;AACA,SAAO;AACX;",
  "names": ["getAddressesFromGouvAdresseApi"]
}
